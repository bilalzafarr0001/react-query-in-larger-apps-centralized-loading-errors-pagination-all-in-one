{"ast":null,"code":"var _s = $RefreshSig$();\nimport jsonpatch from 'fast-json-patch';\nimport { useMutation } from 'react-query';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when we need a server function\nasync function patchUserOnServer(newData, originalData) {\n  if (!newData || !originalData) return null;\n\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n  console.log('patch :::::', patch);\n\n  // send patched data to the server\n  const {\n    data\n  } = await axiosInstance.patch(`/user/${originalData.id}`, {\n    patch\n  }, {\n    headers: getJWTHeader(originalData)\n  });\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser() {\n  _s();\n  const toast = useCustomToast();\n  const {\n    user,\n    updateUser\n  } = useUser();\n  const {\n    mutate: patchUser\n  } = useMutation(newUserData => patchUserOnServer(newUserData, user), {\n    onSuccess: userData => {\n      if (user) {\n        updateUser(userData);\n        toast({\n          title: 'User updated!',\n          status: 'success'\n        });\n      }\n    }\n  });\n  return patchUser;\n}\n_s(usePatchUser, \"SWx4t152H9B+wun0TGFsFr8idgE=\", false, function () {\n  return [useCustomToast, useUser, useMutation];\n});","map":{"version":3,"names":["jsonpatch","useMutation","axiosInstance","getJWTHeader","useUser","useCustomToast","patchUserOnServer","newData","originalData","patch","compare","console","log","data","id","headers","user","usePatchUser","toast","updateUser","mutate","patchUser","newUserData","onSuccess","userData","title","status"],"sources":["/home/muhammadbilal/Desktop/react-query-in-larger-apps-centralized-loading-errors-pagination-all-in-one/client/src/components/user/hooks/usePatchUser.ts"],"sourcesContent":["import jsonpatch from 'fast-json-patch';\nimport { useMutation, UseMutateFunction } from 'react-query';\nimport type { User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when we need a server function\nasync function patchUserOnServer(\n  newData: User | null,\n  originalData: User | null,\n): Promise<User | null> {\n  if (!newData || !originalData) return null;\n\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n  console.log('patch :::::', patch);\n\n  // send patched data to the server\n  const { data } = await axiosInstance.patch(\n    `/user/${originalData.id}`,\n    { patch },\n    {\n      headers: getJWTHeader(originalData),\n    },\n  );\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser(): UseMutateFunction<\n  User,\n  unknown,\n  User,\n  unknown\n> {\n  const toast = useCustomToast();\n  const { user, updateUser } = useUser();\n\n  const { mutate: patchUser } = useMutation(\n    (newUserData: User) => patchUserOnServer(newUserData, user),\n    {\n      onSuccess: (userData: User | null) => {\n        if (user) {\n          updateUser(userData);\n          toast({\n            title: 'User updated!',\n            status: 'success',\n          });\n        }\n      },\n    },\n  );\n\n  return patchUser;\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,SAASC,WAAW,QAA2B,aAAa;AAE5D,SAASC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AACpE,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,cAAc,QAAQ,gCAAgC;;AAE/D;AACA,eAAeC,iBAAiB,CAC9BC,OAAoB,EACpBC,YAAyB,EACH;EACtB,IAAI,CAACD,OAAO,IAAI,CAACC,YAAY,EAAE,OAAO,IAAI;;EAE1C;EACA,MAAMC,KAAK,GAAGT,SAAS,CAACU,OAAO,CAACF,YAAY,EAAED,OAAO,CAAC;EACtDI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,KAAK,CAAC;;EAEjC;EACA,MAAM;IAAEI;EAAK,CAAC,GAAG,MAAMX,aAAa,CAACO,KAAK,CACvC,SAAQD,YAAY,CAACM,EAAG,EAAC,EAC1B;IAAEL;EAAM,CAAC,EACT;IACEM,OAAO,EAAEZ,YAAY,CAACK,YAAY;EACpC,CAAC,CACF;EACD,OAAOK,IAAI,CAACG,IAAI;AAClB;;AAEA;AACA,OAAO,SAASC,YAAY,GAK1B;EAAA;EACA,MAAMC,KAAK,GAAGb,cAAc,EAAE;EAC9B,MAAM;IAAEW,IAAI;IAAEG;EAAW,CAAC,GAAGf,OAAO,EAAE;EAEtC,MAAM;IAAEgB,MAAM,EAAEC;EAAU,CAAC,GAAGpB,WAAW,CACtCqB,WAAiB,IAAKhB,iBAAiB,CAACgB,WAAW,EAAEN,IAAI,CAAC,EAC3D;IACEO,SAAS,EAAGC,QAAqB,IAAK;MACpC,IAAIR,IAAI,EAAE;QACRG,UAAU,CAACK,QAAQ,CAAC;QACpBN,KAAK,CAAC;UACJO,KAAK,EAAE,eAAe;UACtBC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CACF;EAED,OAAOL,SAAS;AAClB;AAAC,GAzBeJ,YAAY;EAAA,QAMZZ,cAAc,EACCD,OAAO,EAENH,WAAW;AAAA"},"metadata":{},"sourceType":"module"}