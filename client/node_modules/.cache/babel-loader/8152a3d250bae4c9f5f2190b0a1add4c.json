{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nasync function removeAppointmentUser(appointment) {\n  const patchData = [{\n    op: 'remove',\n    path: '/userId'\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n  const {\n    mutate\n  } = useMutation(removeAppointmentUser, {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have canceled the appointment!',\n        status: 'warning'\n      });\n    }\n  });\n  return mutate;\n}\n_s(useCancelAppointment, \"hoUwZA1xHrROpctkoAMiT28Sz2U=\", false, function () {\n  return [useQueryClient, useCustomToast, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","useCustomToast","axiosInstance","queryKeys","removeAppointmentUser","appointment","patchData","op","path","patch","id","data","useCancelAppointment","queryClient","toast","mutate","onSuccess","invalidateQueries","appointments","title","status"],"sources":["/Applications/react-query-in-larger-apps-centralized-loading-errors-pagination-all-in-one/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import { UseMutateFunction, useMutation, useQueryClient } from 'react-query';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { Appointment } from '../../../../../shared/types';\nimport { queryKeys } from '../../../react-query/constants';\n\nasync function removeAppointmentUser(appointment: Appointment): Promise<void> {\n  const patchData = [{ op: 'remove', path: '/userId' }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment(): UseMutateFunction<\n  void,\n  unknown,\n  Appointment,\n  unknown\n> {\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n\n  const { mutate } = useMutation(removeAppointmentUser, {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have canceled the appointment!',\n        status: 'warning',\n      });\n    },\n  });\n\n  return mutate;\n}\n"],"mappings":";AAAA,SAA4BA,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAC5E,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,eAAeC,qBAAqB,CAACC,WAAwB,EAAiB;EAC5E,MAAMC,SAAS,GAAG,CAAC;IAAEC,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACrD,MAAMN,aAAa,CAACO,KAAK,CAAE,gBAAeJ,WAAW,CAACK,EAAG,EAAC,EAAE;IAC1DC,IAAI,EAAEL;EACR,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,oBAAoB,GAKlC;EAAA;EACA,MAAMC,WAAW,GAAGb,cAAc,EAAE;EACpC,MAAMc,KAAK,GAAGb,cAAc,EAAE;EAE9B,MAAM;IAAEc;EAAO,CAAC,GAAGhB,WAAW,CAACK,qBAAqB,EAAE;IACpDY,SAAS,EAAE,MAAM;MACfH,WAAW,CAACI,iBAAiB,CAAC,CAACd,SAAS,CAACe,YAAY,CAAC,CAAC;MACvDJ,KAAK,CAAC;QACJK,KAAK,EAAE,oCAAoC;QAC3CC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAAC,GApBeH,oBAAoB;EAAA,QAMdZ,cAAc,EACpBC,cAAc,EAETF,WAAW;AAAA"},"metadata":{},"sourceType":"module"}