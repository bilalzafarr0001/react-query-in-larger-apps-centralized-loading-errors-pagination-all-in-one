{"ast":null,"code":"var _s = $RefreshSig$();\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { useMutation, useQueryClient } from 'react-query';\n// for when server call is needed\nasync function removeAppointmentUser(appointment) {\n  const patchData = [{\n    op: 'remove',\n    path: '/userId'\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  // TODO: replace with mutate function\n  const {\n    mutate\n  } = useMutation(appointment => removeAppointmentUser(appointment), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have cancel the appoitment',\n        status: 'warning'\n      });\n    }\n  });\n  return mutate;\n}\n_s(useCancelAppointment, \"5+/i7P7x/0kCNYxxAhRcSfpmsIM=\", false, function () {\n  return [useCustomToast, useQueryClient, useMutation];\n});","map":{"version":3,"names":["axiosInstance","queryKeys","useCustomToast","useMutation","useQueryClient","removeAppointmentUser","appointment","patchData","op","path","patch","id","data","useCancelAppointment","toast","queryClient","mutate","onSuccess","invalidateQueries","appointments","title","status"],"sources":["/home/muhammadbilal/Desktop/react-query-in-larger-apps-centralized-loading-errors-pagination-all-in-one/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { UseMutateFunction, useMutation, useQueryClient } from 'react-query';\n// for when server call is needed\nasync function removeAppointmentUser(appointment: Appointment): Promise<void> {\n  const patchData = [{ op: 'remove', path: '/userId' }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment(): (appointment: Appointment) => void {\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  // TODO: replace with mutate function\n  const { mutate } = useMutation(\n    (appointment: Appointment) => removeAppointmentUser(appointment),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([queryKeys.appointments]);\n        toast({ title: 'You have cancel the appoitment', status: 'warning' });\n      },\n    },\n  );\n  return mutate;\n}\n"],"mappings":";AACA,SAASA,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAA4BC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAC5E;AACA,eAAeC,qBAAqB,CAACC,WAAwB,EAAiB;EAC5E,MAAMC,SAAS,GAAG,CAAC;IAAEC,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACrD,MAAMT,aAAa,CAACU,KAAK,CAAE,gBAAeJ,WAAW,CAACK,EAAG,EAAC,EAAE;IAC1DC,IAAI,EAAEL;EACR,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,oBAAoB,GAAuC;EAAA;EACzE,MAAMC,KAAK,GAAGZ,cAAc,EAAE;EAC9B,MAAMa,WAAW,GAAGX,cAAc,EAAE;EACpC;EACA,MAAM;IAAEY;EAAO,CAAC,GAAGb,WAAW,CAC3BG,WAAwB,IAAKD,qBAAqB,CAACC,WAAW,CAAC,EAChE;IACEW,SAAS,EAAE,MAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAACjB,SAAS,CAACkB,YAAY,CAAC,CAAC;MACvDL,KAAK,CAAC;QAAEM,KAAK,EAAE,gCAAgC;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IACvE;EACF,CAAC,CACF;EACD,OAAOL,MAAM;AACf;AAAC,GAdeH,oBAAoB;EAAA,QACpBX,cAAc,EACRE,cAAc,EAEfD,WAAW;AAAA"},"metadata":{},"sourceType":"module"}