{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { useUser } from '../../user/hooks/useUser';\n// for when we need functions for useMutation\nasync function setAppointmentUser(appointment, userId) {\n  if (!userId) return;\n  const patchOp = appointment.userId ? 'replace' : 'add';\n  const patchData = [{\n    op: patchOp,\n    path: '/userId',\n    value: userId\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\nexport function useReserveAppointment() {\n  _s();\n  const {\n    user\n  } = useUser();\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  const {\n    mutate\n  } = useMutation(appointment => setAppointmentUser(appointment, user === null || user === void 0 ? void 0 : user.id), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have reserved the appoitment',\n        status: 'success'\n      });\n    }\n  });\n  return mutate;\n}\n_s(useReserveAppointment, \"IQgNJhzkx6C2YTeFVIwtPMfeMWA=\", false, function () {\n  return [useUser, useCustomToast, useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","axiosInstance","queryKeys","useCustomToast","useUser","setAppointmentUser","appointment","userId","patchOp","patchData","op","path","value","patch","id","data","useReserveAppointment","user","toast","queryClient","mutate","onSuccess","invalidateQueries","appointments","title","status"],"sources":["/home/muhammadbilal/Desktop/react-query-in-larger-apps-centralized-loading-errors-pagination-all-in-one/client/src/components/appointments/hooks/useReserveAppointment.ts"],"sourcesContent":["import { UseMutateFunction, useMutation, useQueryClient } from 'react-query';\n\nimport { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\nimport { useUser } from '../../user/hooks/useUser';\n// for when we need functions for useMutation\nasync function setAppointmentUser(\n  appointment: Appointment,\n  userId: number | undefined,\n): Promise<void> {\n  if (!userId) return;\n  const patchOp = appointment.userId ? 'replace' : 'add';\n  const patchData = [{ op: patchOp, path: '/userId', value: userId }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\nexport function useReserveAppointment(): UseMutateFunction<\n  void,\n  unknown,\n  Appointment,\n  unknown\n> {\n  const { user } = useUser();\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation(\n    (appointment: Appointment) => setAppointmentUser(appointment, user?.id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([queryKeys.appointments]);\n        toast({ title: 'You have reserved the appoitment', status: 'success' });\n      },\n    },\n  );\n  return mutate;\n}\n"],"mappings":";AAAA,SAA4BA,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAG5E,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,OAAO,QAAQ,0BAA0B;AAClD;AACA,eAAeC,kBAAkB,CAC/BC,WAAwB,EACxBC,MAA0B,EACX;EACf,IAAI,CAACA,MAAM,EAAE;EACb,MAAMC,OAAO,GAAGF,WAAW,CAACC,MAAM,GAAG,SAAS,GAAG,KAAK;EACtD,MAAME,SAAS,GAAG,CAAC;IAAEC,EAAE,EAAEF,OAAO;IAAEG,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAEL;EAAO,CAAC,CAAC;EACnE,MAAMN,aAAa,CAACY,KAAK,CAAE,gBAAeP,WAAW,CAACQ,EAAG,EAAC,EAAE;IAC1DC,IAAI,EAAEN;EACR,CAAC,CAAC;AACJ;AAEA,OAAO,SAASO,qBAAqB,GAKnC;EAAA;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGb,OAAO,EAAE;EAC1B,MAAMc,KAAK,GAAGf,cAAc,EAAE;EAC9B,MAAMgB,WAAW,GAAGnB,cAAc,EAAE;EACpC,MAAM;IAAEoB;EAAO,CAAC,GAAGrB,WAAW,CAC3BO,WAAwB,IAAKD,kBAAkB,CAACC,WAAW,EAAEW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,EAAE,CAAC,EACvE;IACEO,SAAS,EAAE,MAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAACpB,SAAS,CAACqB,YAAY,CAAC,CAAC;MACvDL,KAAK,CAAC;QAAEM,KAAK,EAAE,kCAAkC;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IACzE;EACF,CAAC,CACF;EACD,OAAOL,MAAM;AACf;AAAC,GAnBeJ,qBAAqB;EAAA,QAMlBZ,OAAO,EACVD,cAAc,EACRH,cAAc,EACfD,WAAW;AAAA"},"metadata":{},"sourceType":"module"}