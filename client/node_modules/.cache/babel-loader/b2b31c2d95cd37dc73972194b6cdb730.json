{"ast":null,"code":"import { createStandaloneToast } from '@chakra-ui/react';\nimport { QueryClient } from 'react-query';\nimport { theme } from '../theme';\nconst toast = createStandaloneToast({\n  theme\n});\nfunction queryErrorHandler(error) {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const title = error instanceof Error ? error.message : 'error connecting to server';\n\n  // prevent duplicate toasts\n  toast.closeAll();\n  toast({\n    title,\n    status: 'error',\n    variant: 'subtle',\n    isClosable: true\n  });\n}\nexport function generateQueryClient() {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        onError: queryErrorHandler,\n        staleTime: 600000,\n        // 10 minutes\n        cacheTime: 900000,\n        // 15 minutes\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        refetchOnReconnect: false\n      },\n      mutations: {\n        onError: queryErrorHandler\n      }\n    }\n  });\n}\n// to satisfy typescript until this file has uncommented contents\nexport const queryClient = generateQueryClient();","map":{"version":3,"names":["createStandaloneToast","QueryClient","theme","toast","queryErrorHandler","error","title","Error","message","closeAll","status","variant","isClosable","generateQueryClient","defaultOptions","queries","onError","staleTime","cacheTime","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","mutations","queryClient"],"sources":["/home/muhammadbilal/Desktop/react-query-in-larger-apps-centralized-loading-errors-pagination-all-in-one/client/src/react-query/queryClient.ts"],"sourcesContent":["import { createStandaloneToast } from '@chakra-ui/react';\nimport { QueryClient } from 'react-query';\n\nimport { theme } from '../theme';\n\nconst toast = createStandaloneToast({ theme });\n\nfunction queryErrorHandler(error: unknown): void {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const title =\n    error instanceof Error ? error.message : 'error connecting to server';\n\n  // prevent duplicate toasts\n  toast.closeAll();\n  toast({ title, status: 'error', variant: 'subtle', isClosable: true });\n}\n\nexport function generateQueryClient(): QueryClient {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        onError: queryErrorHandler,\n        staleTime: 600000, // 10 minutes\n        cacheTime: 900000, // 15 minutes\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        refetchOnReconnect: false,\n      },\n      mutations: {\n        onError: queryErrorHandler,\n      },\n    },\n  });\n}\n// to satisfy typescript until this file has uncommented contents\nexport const queryClient = generateQueryClient();\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,KAAK,QAAQ,UAAU;AAEhC,MAAMC,KAAK,GAAGH,qBAAqB,CAAC;EAAEE;AAAM,CAAC,CAAC;AAE9C,SAASE,iBAAiB,CAACC,KAAc,EAAQ;EAC/C;EACA,MAAMC,KAAK,GACTD,KAAK,YAAYE,KAAK,GAAGF,KAAK,CAACG,OAAO,GAAG,4BAA4B;;EAEvE;EACAL,KAAK,CAACM,QAAQ,EAAE;EAChBN,KAAK,CAAC;IAAEG,KAAK;IAAEI,MAAM,EAAE,OAAO;IAAEC,OAAO,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;AACxE;AAEA,OAAO,SAASC,mBAAmB,GAAgB;EACjD,OAAO,IAAIZ,WAAW,CAAC;IACrBa,cAAc,EAAE;MACdC,OAAO,EAAE;QACPC,OAAO,EAAEZ,iBAAiB;QAC1Ba,SAAS,EAAE,MAAM;QAAE;QACnBC,SAAS,EAAE,MAAM;QAAE;QACnBC,cAAc,EAAE,KAAK;QACrBC,oBAAoB,EAAE,KAAK;QAC3BC,kBAAkB,EAAE;MACtB,CAAC;MACDC,SAAS,EAAE;QACTN,OAAO,EAAEZ;MACX;IACF;EACF,CAAC,CAAC;AACJ;AACA;AACA,OAAO,MAAMmB,WAAW,GAAGV,mBAAmB,EAAE"},"metadata":{},"sourceType":"module"}